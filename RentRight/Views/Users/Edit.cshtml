@model RentRight.Models.User
@using RentRight.Models.Enums
@using System.Security.Claims;
@{
    ViewData["Title"] = "Edit";

    var fullName = User.FindFirstValue(ClaimTypes.Name);
    var typeUser = User.FindFirstValue(ClaimTypes.Role);
    var userId = int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier));
}
<link rel="stylesheet" href="~/css/users.css" asp-append-version="true" />

<h1>Edit profile</h1>

<div class="row d-flex justify-content-center mt-5">
    <div class="col-md-6">
        <form asp-action="Edit" class="d-flex flex-column justify-content-center align-items-center">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="w-100 d-flex justify-content-between">
                <div class="form-floating mt-3 col-5">
                    <input asp-for="FirstName" class="form-control" placeholder="First Name" required />
                    <label asp-for="FirstName"></label>
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>

                <div class="form-floating mt-3 col-6">
                    <input asp-for="LastName" class="form-control" placeholder="Last Name" required />
                    <label asp-for="LastName" class="control-label"></label>
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
            </div>
            <div class="form-floating mt-3 col-12">
                <input asp-for="Email" type="email" class="form-control" placeholder="E-mail" required />
                <label asp-for="Email" class="control-label"></label>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-floating mt-3 col-12">
                <input asp-for="Password" class="form-control" placeholder="Password" required />
                <label asp-for="Password" class="control-label"></label>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            @if (typeUser == TypeUsers.Owner.ToString())
            {
                <div class="w-100 d-flex justify-content-between align-content-center">
                    <div class="form-floating mt-3 col-6">
                        <select asp-for="Type" class="form-select">
                            @foreach (var type in Enum.GetValues(typeof(TypeUsers)))
                            {
                                <option value="@type">@type</option>
                            }
                        </select>
                        <label asp-for="Type" class="control-label"></label>
                        <span asp-validation-for="Type" class="text-danger"></span>
                    </div>

                    <div class="form-check form-switch mt-3 col-3 align-content-end">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                        </label>
                    </div>
                </div>
            } else
            {
                <input type="hidden" asp-for="Type" />
                <input type="hidden" asp-for="IsActive" />
            }
           
            <div class="form-group mt-5 w-100">
                <input type="submit" value="Save" class="btnSave" />
            </div>

        </form>
        @if (typeUser == TypeUsers.Owner.ToString())
        {
            <div class="form-group mt-5 w-100 d-flex justify-content-center align-items-center align-content-center">
                <a asp-action="Delete" asp-route-id="@Model.Id" class="btnDelete">Delete</a>
            </div>
        }
        else
        {
            <div class="form-group mt-5 w-100 d-flex justify-content-center align-items-center align-content-center">
                <a class="btnDeleteProfile">Delete</a>
            </div>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        let modelId = @Model.Id;

        $(".btnDeleteProfile").on("click", function () {
            let modelId = @Model.Id;

            Swal.fire({
                title: 'Are you sure you want to delete this profile?',
                text: 'You won\'t be able to revert this!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6d85bc',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteProfile(modelId);
                }
            });
            function deleteProfile(id) {
                $.ajax({
                    url: '/Users/DeleteProfile/' + id,
                    type: 'POST',
                    success: function (response) {
                        Swal.fire({
                            title: 'Deleted!',
                            text: 'Your account has been deleted.',
                            icon: 'success',
                            timer: 3000,
                            onClose: function () {
                                window.location.href = '/Account/Logout';
                            }
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: 'Error!',
                            text: xhr.responseText,
                            icon: 'error'
                        });
                    }
                });
            }
        });
    </script>
}
