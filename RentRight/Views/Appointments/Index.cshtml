@model IEnumerable<RentRight.Models.Appointments>
@using System.Security.Claims;
@using RentRight.Models.Enums;

@{
    ViewData["Title"] = "Appointments";
    var type = User.FindFirstValue(ClaimTypes.Role);
}
<link rel="stylesheet" href="~/css/appointments.css" asp-append-version="true" />

<h3 class="px-0">Appointments</h3>
@if (type == TypeUsers.Manager.ToString())
{
    <div class="d-flex px-0 justify-content-between">
        <a asp-action="Index" asp-controller="ManagerAvailabilities" class="d-flex justify-content-between align-items-center btnCreate mt-3 fw-bold px-6">
            <i class="fas fa-clock me-2"></i>Manage my availability
        </a>
    </div>
}

<div class="mt-4 px-0 d-flex flex-column align-items-center">
    @foreach (var item in Model)
    {
        <div class="col-8 px-0 d-flex flex-column mb-2">
            <div class="row appointmentCard">
                <div class="d-flex justify-content-between">
                    <div class="d-flex flex-column justify-content-between">
                        @if (type == TypeUsers.Manager.ToString())
                        {
                            <p class="fw-bold m-0">@item.Tenant.FirstName @item.Tenant.LastName </p>
                        }
                        else
                        {
                            <p class="fw-bold m-0">@item.Manager.FirstName @item.Manager.LastName </p>
                        }
                        <p class="m-0">Property @item.Apartment.Property.Name</p>
                        <p class="m-0">Ap @item.Apartment.Number</p>

                        @if (item.Status == AppointmentStatus.Pending.ToString())
                        {
                            <p class="m-0" style="color:#6d85bc"><small>Waiting for confirmation</small></p>
                        }
                        else
                        {
                            <p class="m-0 @item.Status"><small>@item.Status</small></p>
                        }

                    </div>
                    <div class="d-flex align-items-center" style="justify-content: flex-end;">
                        <div class="d-flex flex-column">
                            <p class="text-muted m-0"><small>@String.Format("{0:yyyy-MM-dd}", item.AppointmentDate)</small></p>
                            <p class="text-muted m-0 align-self-center"><small>@String.Format("{0:HH:mm}", item.AppointmentDate)</small></p>
                        </div>
                        @if (item.Status == AppointmentStatus.Pending.ToString() && type == TypeUsers.Manager.ToString())
                        {
                            <form asp-action="ConfirmAppointment">
                                <input type="hidden" value="@item.Id" name="appointmentId" />
                                <button class="confirmAppointment ms-2" type="submit"><i class="fas fa-check"></i></button>
                            </form>
                        }

                        <form asp-action="CancelAppointment">
                            <input type="hidden" value="@item.Id" name="appointmentId" />
                            <button class="deleteAppointment ms-2" type="submit">X</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
    let successMessage = "@(ViewBag.SuccessMessage)";
    let errorMessage = "@(ViewBag.ErrorMessage)";
    if (successMessage !== "") {

        new Notify({
            title: successMessage,
            position: 'right top',
            effect: 'slide',
        })

    }

    if (errorMessage !== "") {

        new Notify({
            status: 'error',
            title: errorMessage,
            position: 'right top',
            effect: 'slide',
        })

    }
</script>
