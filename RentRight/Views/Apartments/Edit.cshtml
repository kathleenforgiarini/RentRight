@model RentRight.Models.Apartment
@using RentRight.Models.Enums

@{
    ViewData["Title"] = "Edit";
}

<link rel="stylesheet" href="~/css/apartments.css" asp-append-version="true" />

<h1>Edit an apartment</h1>

<div class="row d-flex justify-content-center mt-5">
    <div class="col-md-6">
        <form asp-action="Edit" class="d-flex flex-column justify-content-center align-items-center" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="PropertyId" />
            <div class="w-100 d-flex justify-content-between">
                <div class="col-md-3">
                    <img width="150" height="150" src="data:image;base64,@Convert.ToBase64String(Model.Photo)" class="preview-image" />
                </div>
                <div class="align-self-end col-8">
                    <label asp-for="PhotoFile" class="control-label"></label>
                    <input asp-for="PhotoFile" type="file" accept="image/*" class="form-control" />
                    <input asp-for="Photo" type="hidden" />
                    <span asp-validation-for="PhotoFile" class="text-danger"></span>
                </div>
            </div>
            <div class="form-floating mt-3 col-12">
                <input asp-for="Number" type="number" class="form-control" required placeholder="Number" />
                <label asp-for="Number" class="control-label"></label>
                <span asp-validation-for="Number" class="text-danger"></span>
            </div>
            <div class="w-100 d-flex justify-content-between">
                <div class="form-floating mt-3 col-5">
                    <input asp-for="Bedrooms" type="number" class="form-control" required placeholder="Bedrooms" />
                    <label asp-for="Bedrooms" class="control-label"></label>
                    <span asp-validation-for="Bedrooms" class="text-danger"></span>
                </div>
                <div class="form-floating mt-3 col-5">
                    <input asp-for="Bathrooms" type="number" class="form-control" required placeholder="Bathrooms" />
                    <label asp-for="Bathrooms" class="control-label"></label>
                    <span asp-validation-for="Bathrooms" class="text-danger"></span>
                </div>
            </div>
            <div class="w-100 d-flex justify-content-between">
                <div class="form-check form-switch mt-3 col-5 align-self-center">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="Pets" /> @Html.DisplayNameFor(model => model.Pets)
                    </label>
                    <span asp-validation-for="Pets" class="text-danger"></span>
                </div>
                <div class="form-floating mt-3 col-5">
                    <input asp-for="Size" type="number" class="form-control" required placeholder="Size" />
                    <label asp-for="Size" class="control-label"></label>
                    <span asp-validation-for="Size" class="text-danger"></span>
                </div>
            </div>
            <div class="w-100 d-flex justify-content-between">
                <div class="form-floating mt-3 col-5">
                    <input asp-for="RentPrice" type="number" class="form-control" required placeholder="Rent Price" />
                    <label asp-for="RentPrice" class="control-label"></label>
                    <span asp-validation-for="RentPrice" class="text-danger"></span>
                </div>
                <div class="form-floating mt-3 col-5">
                    <select asp-for="Status" class="form-control">
                        @foreach (var status in Enum.GetValues(typeof(ApartmentStatus)))
                        {
                            <option value="@status">@status</option>
                        }
                    </select>
                    <label asp-for="Status" class="control-label"></label>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group mt-5 w-100">
                <input type="submit" value="Save" class="btnSave" />
            </div>
        </form>
        <div class="form-group mt-5 w-100 d-flex justify-content-center align-items-center align-content-center">
            <a class="btnDeleteApartment">Delete</a>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        let modelId = @Model.Id;

        $(".btnDeleteApartment").on("click", function () {
            let modelId = @Model.Id;

            Swal.fire({
                title: 'Are you sure you want to delete this apartment?',
                text: 'You won\'t be able to revert this!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6d85bc',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteApartment(modelId);
                }
            });
            function deleteApartment(id) {
                var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '/Apartments/Delete/' + id,
                    type: 'POST',
                    data: {
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        var propertyId = response

                        Swal.fire({
                            title: 'Deleted!',
                            text: 'Your apartment has been deleted.',
                            icon: 'success',
                            timer: 3000,
                            onClose: function () {
                                window.location.href = '/Apartments/Index?propertyId=' + propertyId;
                            }
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: 'Error!',
                            text: xhr.responseText,
                            icon: 'error'
                        });
                    }
                });
            }
        });
    </script>
    <script src="~/js/properties.js"></script>

}
