@model IEnumerable<RentRight.Models.Apartment>

@{
    ViewData["Title"] = "Apartments";
    var fullName = User.FindFirstValue(ClaimTypes.Name);
    var type = User.FindFirstValue(ClaimTypes.Role);
    var userId = int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier));
}

@using System.Security.Claims;
@using RentRight.Models.Enums;

<link rel="stylesheet" href="~/css/apartments.css" asp-append-version="true" />

<div class="d-flex justify-content-between px-0 fw-bold">
    <h3>Property @ViewBag.PropertyName</h3>
    <div class="d-flex justify-content-between align-items-end">
        <form asp-action="Search" method="get" class="d-flex">
            <span class="align-content-center me-1">Search by</span>
            <select class="searchSelect form-select-sm me-2" name="searchBy">
                <option value="all">All apartments</option>
                <option value="bed">Number of bedrooms</option>
                <option value="bath">Number of bathrooms</option>
                <option value="pet">Pet Friendly</option>
                <option value="size">Size</option>
                <option value="price">Rent Price</option>
                @if (type != TypeUsers.Tenant.ToString())
                {
                    <option value="status">Status</option>
                }
                
            </select>
            <input class="search me-2" required type="number" placeholder="Search..." name="searchTerm" />
            <input class="searchFrom me-2" required type="number" placeholder="From" name="searchFrom" />
            <input class="searchTo me-2" required type="number" placeholder="To" name="searchTo" />
            <input type="hidden" value=@ViewBag.PropertyId name="propertyId" />
            <select name="status" class="form-select statusSelect me-2 status" required>
                @foreach (var item in Enum.GetValues(typeof(ApartmentStatus)))
                {
                    <option value="@item">@item</option>
                }
            </select>
            <input type="submit" value="Search" class="btnSearch" />

        </form>
    </div>
</div>

<p class="px-0 mt-2 textDesc">@ViewBag.PropertyDescription</p>

@if (type != TypeUsers.Tenant.ToString())
{
    <a asp-action="Create" asp-route-propertyId="@ViewBag.PropertyId" class="d-flex justify-content-between align-items-center btnCreate mt-3 fw-bold px-6">
        <i class="fas fa-plus me-2"></i>Create
    </a>
}

<div class="row px-0 mt-5">
    @foreach (var item in Model)
    {
        <div class="col-md-3">
            <div class="card">
                <img height="220" class="card-img-top" src="data:image;base64,@Convert.ToBase64String(item.Photo)" alt="Apartment Photo" />
                <div class="card-body d-flex flex-column">
                    <div class="d-flex justify-content-between">
                        <h5 class="card-title textPrice">$@item.RentPrice</h5>
                        <p class="card-text text-muted textSize">@item.Size ft²</p>
                    </div>
                    <div class="d-flex justify-content-between textAbout mt-2">
                        <p class="card-text">@item.Bedrooms Bed</p>
                        <p class="card-text">@item.Bathrooms Bath</p>
                        @if (item.Pets)
                        {
                            <p class="card-text">Pet Friendly</p>

                        }
                    </div>
                    <div class="d-flex justify-content-between mt-2 fw-bold px-6">
                        @if (type == TypeUsers.Tenant.ToString())
                        {
                            <form method="post" asp-action="SendFirstMessage" asp-controller="Messages">
                                <input type="hidden" value="@item.Id" name="apartmentId" />
                                <input type="hidden" value="@item.Property.ManagerId" name="receiverId" />
                                <button type="submit" class="d-flex justify-content-between align-items-center btnContact">
                                    <i class="fas fa-envelope me-2"></i>Contact
                                </button>
                            </form>
                        }
                        @if (type == TypeUsers.Manager.ToString())
                        {
                            <form method="post" asp-action="SendFirstMessage" asp-controller="Messages">
                                <input type="hidden" value="@item.Id" name="apartmentId" />
                                <input type="hidden" value="@item.Property.OwnerId" name="receiverId" />
                                <button type="submit" class="d-flex justify-content-between align-items-center btnContact">
                                    <i class="fas fa-envelope me-2"></i>Contact
                                </button>
                            </form>
                        }

                        @if (type != TypeUsers.Tenant.ToString())
                        {
                            <p class="card-text align-content-center textStatus">@item.Status</p>
                        } else
                        {
                            <a asp-action="Contact" class="d-flex justify-content-between align-items-center btnMeeting">
                                <i class="fas fa-calendar-day me-2"></i>Meeting
                            </a>
                        }
                    </div>
                    @if (type != TypeUsers.Tenant.ToString())
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btnEdit btn fw-bold px-6 mt-4">Edit</a>
                    }
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

    }
    <script>
        let successMessage = "@(ViewBag.SuccessMessage)";
        let errorMessage = "@(ViewBag.ErrorMessage)";
        if (successMessage !== "") {

            new Notify({
                title: successMessage,
                position: 'right top',
                effect: 'slide',
            })

        }

        if (errorMessage !== "") {

            new Notify({
                status: 'error',
                title: errorMessage,
                position: 'right top',
                effect: 'slide',
            })
        }


        $('.search, .searchFrom, .searchTo, .status').hide().removeAttr('required');

        $('.searchSelect').change(function () {
            var selectedOption = $(this).val();
            if (selectedOption === 'all' || selectedOption === 'pet') {
                $('.search, .searchFrom, .searchTo, .status').hide().removeAttr('required');

            } else if (selectedOption === 'price') {
                $('.search').hide().removeAttr('required');
                $('.searchFrom, .searchTo').show().attr('required', 'required');
            }
            else if (selectedOption === 'status') {
                $('.status').show().attr('required', 'required');

            } else {
                $('.search').show().attr('required', 'required');
            }
        });
    </script>
}

